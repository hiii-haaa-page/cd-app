{"version":3,"sources":["redux/users/actions.js","redux/store/initialState.js","redux/users/reducers.js","redux/store/store.js","templates/LogIn.jsx","templates/Home.jsx","Router.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SIGN_IN","initialState","users","isSignedIn","uid","username","UsersReducer","state","action","type","Action","payload","history","Login","dispatch","useDispatch","onClick","push","Home","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","History","store","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAAaA,EAAU,UCQRC,EARM,CACnBC,MAAO,CACLC,YAAY,EACZC,IAAK,GACLC,SAAU,KCDDC,EAAe,WAAyC,IAAxCC,EAAuC,uDAA/BN,EAAaC,MAAOM,EAAW,uCAClE,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GACAC,EAAOG,SAEd,QACE,OAAOJ,I,oBCFuBK,E,sBCIrBC,EAVD,WACZ,IAAMC,EAAWC,cACjB,OACE,qCACE,gEACA,wBAAQC,QAAS,kBAAMF,EAASG,YAAK,OAArC,sBCKSC,EAVF,WACX,IAAMJ,EAAWC,cACjB,OACE,qCACE,0DACA,wBAAQC,QAAS,kBAAMF,EAASG,YAAK,OAArC,sBCISE,EATA,WACb,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWJ,IACjC,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,SAASC,UAAWT,QCG7BU,EARH,WACV,OACE,+BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGRb,E,KAAUqB,IACHC,GNFuBtB,EMEHA,ENDxBuB,YACLC,YAAgB,CAEdC,OAAQC,YAAc1B,GACtBV,MAAOI,IAETiC,YAAgBC,YAAiB5B,MMHrC6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAiBtB,QAASA,EAA1B,SACE,cAAC,EAAD,UAINgC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.6e0880e0.chunk.js","sourcesContent":["export const SIGN_IN = 'SIGN_IN';\n\nexport const signInAction = userState => {\n  return {\n    type: 'SIGN_IN',\n    payload: {\n      isSignedIn: true,\n      uid: userState.uid,\n      username: userState.username,\n    },\n  };\n};\n\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const signOutAction = userState => {\n  return {\n    type: 'SIGN_OUT',\n    payload: {\n      isSignedIn: false,\n      uid: '',\n      username: '',\n    },\n  };\n};\n","const initialState = {\n  users: {\n    isSignedIn: true,\n    uid: '',\n    username: '',\n  },\n};\n\nexport default initialState;\n","import * as Action from './actions';\nimport initialState from '../store/initialState';\n\nexport const UsersReducer = (state = initialState.users, action) => {\n  switch (action.type) {\n    case Action.SIGN_IN:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware,\n} from 'redux';\n// import { ProductsReducer } from '../products/reducers';\nimport { UsersReducer } from '../users/reducers';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\n\nexport default function createStore(history) {\n  return reduxCreateStore(\n    combineReducers({\n      //   products: ProductsReducer,\n      router: connectRouter(history),\n      users: UsersReducer,\n    }),\n    applyMiddleware(routerMiddleware(history))\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <h2>こんに日は</h2>\n      <button onClick={() => dispatch(push('/'))}>home</button>\n    </>\n  );\n};\n\nexport default Login;\n","import { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <h2>ログイン</h2>\n      <button onClick={() => dispatch(push('/'))}>home</button>\n    </>\n  );\n};\n\nexport default Home;\n","import { Route, Switch } from 'react-router';\nimport { Login, Home } from './templates';\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/login\" component={Login} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import Router from './Router';\n\nconst App = () => {\n  return (\n    <main>\n      <Router />\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport createStore from './redux/store/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ConnectedRouter } from 'connected-react-router';\nimport * as History from 'history';\n\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}